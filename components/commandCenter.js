import startQuiz from "./startQuiz.js";
import startRatingQuiz from "./startRatingQuiz.js";
import db from "../database/init.js";
import handleQuizAnswer from "./handleQuizAnswer.js";

const commandCenter = async (ctx) => {
    const { text } = ctx.message;

    switch (text) {
        case "üìÑ HTML":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiEBn1_AvCcpLTFO8B_jJMuN_uA0JZgACL2QAAs7KwUqlbWrq3dpn1TYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ üìÑ HTML");
            await startQuiz(ctx, "html");
            break;

        case "üé® CSS":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiEhn1_BRQKVCver1eCTSgN5-V7hLWgAClW0AAtrKuUqhqxudVSUVOTYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ üé® CSS");
            await startQuiz(ctx, "css");
            break;

        case "üü® JavaScript":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiDxn1_AiDiaZ8O6_uiMSWTg_RNwhZwACT2MAAkq5wEqPFE6aOjJlnDYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ üü® JavaScript");
            await startQuiz(ctx, "js");
            break;

        case "‚öõÔ∏è React":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiEZn1_BG3rMxBU8gP57xPjvvpAb46QACXW0AAsUswUpnIKhUWyBaZjYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ ‚öõÔ∏è React");
            await startQuiz(ctx, "react");
            break;

        case "üÖ∞Ô∏è Angular":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiEpn1_Ba-yeZ9F0lUT4N7vkELBq1kgACwG8AApxKwEoi966UwwNEJzYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ üÖ∞Ô∏è Angular");
            await startQuiz(ctx, "angular");
            break;

        case "üü¶ TypeScript":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiCxn1-9HfiZsOkhEgx5DunVKIMvK9AAC-GkAAsTowUrOmdEWOdHVnzYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ üü¶ TypeScript");
            await startQuiz(ctx, "typescript");
            break;

        case "üü©Node.js":
            await ctx.replyWithSticker("CAACAgIAAxkBAAENiEJn1_A9IEAvBeD87_MPmLX0TdoErQACt2oAAuUkwUpkz9BwvFonbjYE");
            await ctx.reply("–í—ã –≤—ã–±—Ä–∞–ª–∏ üü¢ Node.js");
            await startQuiz(ctx, "nodejs");
            break;

        case "üèÜ –†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π —Ä–µ–∂–∏–º":
            await startRatingQuiz(ctx);
            break;

        case "üì£ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤":
            await showLeaderboard(ctx);
            break;

        default:
            await handleQuizAnswer(ctx, text);
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
async function showLeaderboard(ctx) {
    const topUsers = await new Promise((resolve, reject) => {
        db.all(
            "SELECT username, total_score  FROM leaderboard ORDER BY total_score DESC LIMIT 10",
            (err, rows) => {
                if (err) return reject(err);
                resolve(rows);
            }
        );
    });

    if (topUsers.length > 0) {
        const leaderboardMessage = topUsers
            .map((user, index) => `${index + 1}. ${user.username} - ${user.total_score} –æ—á–∫–æ–≤`)
            .join("\n");

        await ctx.reply(`üèÜ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤:\n${leaderboardMessage}`);
    } else {
        await ctx.reply("–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞. –ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É, —á—Ç–æ–±—ã –ø–æ—è–≤–∏–ª–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!");
    }
}

export default commandCenter;