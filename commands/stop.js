import { updateLeaderboard } from "../database/userUpdate.js";

export default async function stopCommand(ctx) {
    const { currentCategory, correctAnswers = {}, ratingMode, score = 0 } = ctx.session;

    if (!currentCategory) {
        await ctx.reply("–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ —Ç–µ—Å—Ç.");
        return;
    }

    const username = ctx.from.username || ctx.from.first_name;
    const finalScore = ratingMode ? score : correctAnswers[currentCategory] || 0;

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
    await updateLeaderboard(username, ratingMode ? "rating" : currentCategory, finalScore);

    await ctx.reply(`–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–µ—Å—Ç! –ù–∞–±—Ä–∞–Ω–Ω—ã–µ –±–∞–ª–ª—ã: ${finalScore}`);
    ctx.session.askedQuestions = [];
    ctx.session.currentQuestion = null;
    ctx.session.ratingMode = false;
    ctx.session.score = 0;

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    const startKeyboard = {
        keyboard: [
            [{ text: "üìÑ HTML" }, { text: "üé® CSS" }],
            [{ text: "üü® JavaScript" }, { text: "‚öõÔ∏è React" }],
            [{ text: "üÖ∞Ô∏è Angular" }, { text: "üü¶ TypeScript" }],
            [{ text: "üü©Node.js" }],
            [{ text: "üèÜ –†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π —Ä–µ–∂–∏–º" }],
            [{ text: "üì£ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤" }],
        ],
        resize_keyboard: true,
    };

    await ctx.reply("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ —Ä–µ–∂–∏–º:", {
        reply_markup: startKeyboard,
    });
}