import db from "../database/init.js";

export default async function resetCommand(ctx) {
    const { currentCategory } = ctx.session;

    if (!currentCategory) {
        await ctx.reply("–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ —Ç–µ—Å—Ç.");
        return;
    }

    const username = ctx.from.username || ctx.from.first_name;

    db.run(
        `UPDATE leaderboard 
     SET ${currentCategory}_score = 0, total_score = total_score - ${currentCategory}_score
     WHERE username = ?`,
        [username],
        (err) => {
            if (err) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:", err);
                ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.");
            } else {
                ctx.reply(`–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${currentCategory} —Å–±—Ä–æ—à–µ–Ω.`);
            }
        }
    );

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    const startKeyboard = {
        keyboard: [
            [{ text: "üìÑ HTML" }, { text: "üé® CSS" }],
            [{ text: "üü® JavaScript" }, { text: "‚öõÔ∏è React" }],
            [{ text: "üÖ∞Ô∏è Angular" }, { text: "üü¶ TypeScript" }],
            [{ text: "üü©Node.js" }],
            [{ text: "üèÜ –†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π —Ä–µ–∂–∏–º" }],
            [{ text: "üì£ –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤" }],
        ],
        resize_keyboard: true,
    };

    await ctx.reply("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ —Ä–µ–∂–∏–º:", {
        reply_markup: startKeyboard,
    });
}